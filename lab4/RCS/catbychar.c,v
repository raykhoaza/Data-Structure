head	1.5;
access;
symbols;
locks;
comment	@ * @;


1.5
date	2014.01.29.01.59.24;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.04.24.01.29.10;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.04.24.00.53.38;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.01.29.22.47.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.01.29.22.37.22;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: catbychar.c,v 1.4 2013-04-23 18:29:10-07 - - $

//
// NAME
//    catbychar - example of simple cat to display files
//
// SYNOPSIS
//    catbychar [filename...]
//
// DESCRIPTION
//    Uses fgetc(3) to read bytes from files.
//    If no filenames are specified, reads stdin.
//

#include <errno.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define STDIN_NAME "-"
char *program_name = NULL;
int exit_status = EXIT_SUCCESS;

void catbychar (FILE *input, char *filename) {
   printf ("FILE %s:\n", filename);
   for (;;) {
      int byte = fgetc (input);
      if (byte == EOF) break;
      putchar (byte);
   }
}


int main (int argc, char **argv) {
   program_name = basename (argv[0]);
   if (argc == 1) {
      catbychar (stdin, STDIN_NAME);
   }else {
      for (int argi = 1; argi < argc; ++argi) {
         char *filename = argv[argi];
         if (strcmp (filename, STDIN_NAME) == 0) {
            catbychar (stdin, STDIN_NAME);
         }else {
            FILE *input = fopen (filename, "r");
            if (input != NULL) {
               catbychar (input, filename);
               fclose (input);
            }else {
               exit_status = EXIT_FAILURE;
               fflush (NULL);
               fprintf (stderr, "%s: %s: %s\n", program_name,
                        filename, strerror (errno));
               fflush (NULL);
            }
         }
      }
   }
   return exit_status;
}

//TEST// ls -bgoa | catbychar >catbychar.out
//TEST// mkpspdf catbychar.ps catbychar.c* catbychar.out*

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: catbychar.c,v 1.3 2013-04-23 17:53:38-07 - - $
d11 2
a12 2
//    Uses getc (getchar) to read bytes from files and print
//    to stdout.  If no filenames are specified, reads stdin.
d34 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: catbychar.c,v 1.2 2013-01-29 14:47:43-08 - - $
d25 2
a26 1
void catbychar (FILE *input) {
d37 1
a37 1
      catbychar (stdin);
d42 1
a42 1
            catbychar (stdin);
d46 1
a46 1
               catbychar (input);
d61 3
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: catbychar.c,v 1.1 2013-01-29 14:37:22-08 - - $
d21 1
a23 1
#define STDIN_NAME "-"
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: charcat.c,v 1.4 2013-01-29 14:30:53-08 - - $
d5 1
a5 1
//    charcat - example of simple cat to display files
d8 1
a8 1
//    charcat [filename...]
d25 1
a25 1
void charcat (FILE *input) {
d36 1
a36 1
      charcat (stdin);
d41 1
a41 1
            charcat (stdin);
d45 1
a45 1
               charcat (input);
@
