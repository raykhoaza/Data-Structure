head	1.9;
access;
symbols;
locks;
comment	@# @;


1.9
date	2014.05.01.00.37.19;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.04.24.04.26.13;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.04.24.04.25.46;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.04.24.04.23.10;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.02.09.02.01.20;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.10.26.01.13.13;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.04.25.20.18.21;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.02.02.04.21.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.02.02.01.54.13;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@#!/bin/sh
# $Id: mk,v 1.8 2014-04-23 21:26:13-07 - - $
#
# This script takes the names of C source files and compiles them
# into executable images.  Each source must be a complete program.
#

export PATH=$PATH:/afs/cats.ucsc.edu/courses/cmps012b-wm/bin
GCC='gcc -g -O0 -Wall -Wextra -std=gnu99'

for CSOURCE in *.c
do
   EXECBIN=${CSOURCE%.c}
   if [ "$CSOURCE" == "$EXECBIN" ]
   then
      echo $0: $CSOURCE: is not a C source file
   else
      echo CSOURCE=$CSOURCE EXECBIN=$EXECBIN
      set -x
      cid + $CSOURCE
      checksource $CSOURCE
      $GCC $CSOURCE -o $EXECBIN -lm 2>&1 | tee $CSOURCE.log 2>&1
      set +x
      echo ============================================================
   fi
done

@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.7 2014-04-23 21:25:46-07 - - $
a10 19
function label() {
   echo ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
   echo "$@@"
   echo ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
}

function catnv() {
   for arg in $*
   do
      if [ "$arg" = "-f" ]
      then
         echo -e '\f'
      else
         label $arg
         cat -nv $arg
      fi
   done
}

d22 1
a22 4
      catnv $CSOURCE >$CSOURCE.log
      label "Errors from $GCC $CSOURCE" >>$CSOURCE.log
      $GCC $CSOURCE -o $EXECBIN -lm >>$CSOURCE.log 2>&1
      cat $CSOURCE.log
a27 2
mkpspdf Listing.ps $0 *.log

@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.6 2014-04-23 21:23:10-07 - - $
d30 1
a30 1
for CSOURCE in $*
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.5 2013-02-08 18:01:20-08 - - $
d12 3
a14 3
         echo ::::::::::::::::::::::::::::::::
         echo "$@@"
         echo ::::::::::::::::::::::::::::::::
d42 1
a42 1
      label "Errors from $GCC" >>$CSOURCE.log
d49 3
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.4 2012-10-25 18:13:13-07 - - $
d7 1
d9 21
d41 4
a44 1
      gcc -g -O0 -Wall -Wextra -std=gnu99 $CSOURCE -o $EXECBIN -lm
@


1.4
log
@-
@
text
@d1 2
a2 2
#!/bin/sh -x
# $Id: mk,v 1.3 2011-04-25 13:18:21-07 - - $
d7 1
d10 13
a22 4
   cid + $CSOURCE
   checksource $CSOURCE
   EXECBIN=`echo $CSOURCE | sed 's/\.c$//'`
   gcc -g -O0 -Wall -Wextra -std=gnu99 $CSOURCE -o $EXECBIN -lm
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.2 2011-02-01 20:21:28-08 - - $
a10 1
   lint -Xa -fd -m -u -x -errchk=%all $CSOURCE
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: mk,v 1.1 2011-02-01 17:54:13-08 - - $
d4 2
a5 2
# This script takes the name of an executable image assumed to be
# from a C program and compiles it.
d7 8
a14 4
EXECBIN=$1
cid + $1.c
lint -Xa -fd -m -u -x -errchk=%all $EXECBIN.c
gcc -g -O0 -Wall -Wextra -std=gnu99 $EXECBIN.c -o $EXECBIN -lm
@


1.1
log
@-
@
text
@d1 2
a2 2
#!/bin/sh
# $Id$
d5 1
a5 2
# from a C program and compiles it.  If the name of a C program is
# given, the suffix is chopped.
d7 2
a8 1
EXECBIN=`echo $1 | sed 's/\.c$//'`
@
