//KHOA LUONG KLUON7
Script started on Wed 07 May 2014 08:40:13 PM PDT
You are currently using 19% (91.2 MiB) of your 488.3 MiB quota.
]0;kluon7@unix2:code[kluon7@unix2 code]$ mk uninit.c
CSOURCE=err2.c EXECBIN=err2
+ cid + err2.c
+ checksource err2.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 err2.c -o err2 -lm
+ tee err2.c.log
err2.c: In function â€˜mainâ€™:
err2.c:6:14: warning: initialization makes pointer from integer without a cast [enabled by default]
    char *p = 20;
              ^
+ set +x
============================================================
CSOURCE=err.c EXECBIN=err
+ cid + err.c
+ checksource err.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 err.c -o err -lm
+ tee err.c.log
err.c: In function â€˜fooâ€™:
err.c:6:9: warning: unused variable â€˜pâ€™ [-Wunused-variable]
    int *p = &x;
         ^
err.c: In function â€˜barâ€™:
err.c:11:11: warning: â€˜aâ€™ is used uninitialized in this function [-Wuninitialized]
    printf ("%d %p\n", a, p);
           ^
err.c:11:11: warning: â€˜pâ€™ is used uninitialized in this function [-Wuninitialized]
+ set +x
============================================================
CSOURCE=list1.c EXECBIN=list1
+ cid + list1.c
+ checksource list1.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list1.c -o list1 -lm
+ tee list1.c.log
list1.c: In function â€˜mainâ€™:
list1.c:15:7: warning: implicit declaration of function â€˜mallocâ€™ [-Wimplicit-function-declaration]
       node *node = malloc (sizeof (struct node));
       ^
list1.c:15:20: warning: incompatible implicit declaration of built-in function â€˜mallocâ€™ [enabled by default]
       node *node = malloc (sizeof (struct node));
                    ^
list1.c:12:15: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
+ set +x
============================================================
CSOURCE=list2.c EXECBIN=list2
+ cid + list2.c
+ checksource list2.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list2.c -o list2 -lm
+ tee list2.c.log
list2.c: In function â€˜mainâ€™:
list2.c:12:15: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
+ set +x
============================================================
CSOURCE=malloc.c EXECBIN=malloc
+ cid + malloc.c
+ checksource malloc.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 malloc.c -o malloc -lm
+ tee malloc.c.log
malloc.c: In function â€˜mainâ€™:
malloc.c:12:15: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
malloc.c:12:28: warning: unused parameter â€˜argvâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
                            ^
+ set +x
============================================================
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
+ tee uninit.c.log
uninit.c: In function â€˜mainâ€™:
uninit.c:6:15: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
uninit.c:6:28: warning: unused parameter â€˜argvâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
                            ^
uninit.c:8:11: warning: â€˜pointerâ€™ is used uninitialized in this function [-Wuninitialized]
    printf ("pointer=%p\n", pointer);
           ^
uninit.c:11:11: warning: â€˜fooâ€™ is used uninitialized in this function [-Wuninitialized]
    printf ("foo=%d\n", foo);
           ^
+ set +x
============================================================
]0;kluon7@unix2:code[kluon7@unix2 code]$ valgrind uninit
==21537== Memcheck, a memory error detector
==21537== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==21537== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==21537== Command: uninit
==21537== 
==21537== Conditional jump or move depends on uninitialised value(s)
==21537==    at 0x35CF845988: vfprintf (vfprintf.c:1640)
==21537==    by 0x35CF84F489: printf (printf.c:35)
==21537==    by 0x400544: main (uninit.c:8)
==21537== 
pointer=(nil)
==21537== Use of uninitialised value of size 8
==21537==    at 0x400549: main (uninit.c:9)
==21537== 
==21537== Invalid read of size 4
==21537==    at 0x400549: main (uninit.c:9)
==21537==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==21537== 
==21537== 
==21537== Process terminating with default action of signal 11 (SIGSEGV)
==21537==  Access not within mapped region at address 0x0
==21537==    at 0x400549: main (uninit.c:9)
==21537==  If you believe this happened as a result of a stack
==21537==  overflow in your program's main thread (unlikely but
==21537==  possible), you can try to increase the size of the
==21537==  main thread stack using the --main-stacksize= flag.
==21537==  The main thread stack size used in this run was 10485760.
==21537== 
==21537== HEAP SUMMARY:
==21537==     in use at exit: 0 bytes in 0 blocks
==21537==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==21537== 
==21537== All heap blocks were freed -- no leaks are possible
==21537== 
==21537== For counts of detected and suppressed errors, rerun with: -v
==21537== Use --track-origins=yes to see where uninitialised values come from
==21537== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
]0;kluon7@unix2:code[kluon7@unix2 code]$ ecj[Kho $?
139
]0;kluon7@unix2:code[kluon7@unix2 code]$ pst[Ktati[Kus 139
pstatus: 0x008B TERMINATED 11: Segmentation fault (core dumped)
]0;kluon7@unix2:code[kluon7@unix2 code]$ exit
exit

Script done on Wed 07 May 2014 08:40:49 PM PDT
