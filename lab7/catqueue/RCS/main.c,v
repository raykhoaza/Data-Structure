head	1.10;
access;
symbols;
locks;
comment	@ * @;


1.10
date	2013.02.16.01.17.42;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.02.12.03.17.19;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.02.12.03.15.55;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.02.12.03.12.01;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.02.23.03.23.35;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.02.23.03.22.39;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.02.23.03.22.13;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.02.15.04.43.22;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.02.15.04.33.11;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.02.15.04.32.33;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: main.c,v 1.9 2013-02-11 19:17:19-08 - - $

#include <assert.h>
#include <errno.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "queue.h"

char *execname = NULL;
int exit_status = EXIT_SUCCESS;

void putinqueue (queue *the_queue, FILE *input, char *filename) {
   char buffer[1024];
   for (int linenr = 1; ; ++linenr) {
      char *linepos = fgets (buffer, sizeof buffer, input);
      if (linepos == NULL) break;
      linepos = strchr (buffer, '\n');
      if (linepos == NULL) {
         fflush (NULL);
         fprintf (stderr, "%s: %s[%d]: unterminated line\n",
                  execname, filename, linenr);
         fflush (NULL);
         exit_status = EXIT_FAILURE;
      }else {
         *linepos = '\0';
      }
      linepos = strdup (buffer);
      assert (linepos != NULL);
      insert_queue (the_queue, linepos);
   }
}

void putfileinqueue (queue *the_queue, char *filename) {
   FILE *input = fopen (filename, "r");
   if (input == NULL) {
      fflush (NULL);
      fprintf (stderr, "%s: %s: %s\n",
               execname, filename, strerror (errno));
      fflush (NULL);
      exit_status = EXIT_FAILURE;
   }else {
      putinqueue (the_queue, input, filename);
      fclose (input);
   }
}


int main (int argc, char **argv) {
   execname = basename (argv[0]);
   queue *the_queue = new_queue();

   if (argc < 2) {
      putinqueue (the_queue, stdin, "-");
   }else {
      for (int argi = 1; argi < argc; ++argi) {
         if (strcmp (argv[argi], "-") == 0) {
            putinqueue (the_queue, stdin, "-");
         }else {
            putfileinqueue (the_queue, argv[argi]);
         }
      }
   }

   while (! isempty_queue (the_queue)) {
      printf ("%s\n", remove_queue (the_queue));
   }

   return exit_status;
}

@


1.9
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.8 2013-02-11 19:15:55-08 - - $ */
@


1.8
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.7 2013-02-11 19:12:01-08 - - $ */
d15 1
a15 1
void putinqueue (queue *queue_, FILE *input, char *filename) {
d32 1
a32 1
      insert_queue (queue_, linepos);
d36 1
a36 1
void putfileinqueue (queue *queue_, char *filename) {
d45 1
a45 1
      putinqueue (queue_, input, filename);
d53 1
a53 1
   queue *queue_ = new_queue();
d56 1
a56 1
      putinqueue (queue_, stdin, "-");
d60 1
a60 1
            putinqueue (queue_, stdin, "-");
d62 1
a62 1
            putfileinqueue (queue_, argv[argi]);
d67 2
a68 2
   while (! isempty_queue (queue_)) {
      printf ("%s\n", remove_queue (queue_));
@


1.7
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.6 2012-02-22 19:23:35-08 - - $ */
d15 1
a15 1
void putinqueue (queue *queue, FILE *input, char *filename) {
d32 1
a32 1
      insert_queue (queue, linepos);
d36 1
a36 1
void putfileinqueue (queue *queue, char *filename) {
d45 1
a45 1
      putinqueue (queue, input, filename);
d53 1
a53 1
   queue *queue = new_queue();
d56 1
a56 1
      putinqueue (queue, stdin, "-");
d60 1
a60 1
            putinqueue (queue, stdin, "-");
d62 1
a62 1
            putfileinqueue (queue, argv[argi]);
d67 2
a68 2
   while (! isempty_queue (queue)) {
      printf ("%s\n", remove_queue (queue));
@


1.6
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.5 2012-02-22 19:22:39-08 - - $ */
d15 1
a15 1
void putinqueue (queue_ref queue, FILE *input, char *filename) {
d36 1
a36 1
void putfileinqueue (queue_ref queue, char *filename) {
d53 1
a53 1
   queue_ref queue = new_queue();
@


1.5
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.4 2012-02-22 19:22:13-08 - - $ */
d17 1
a17 2
   int linenr;
   for (linenr = 1; ; ++linenr) {
d29 1
a29 1
      };
d33 1
a33 1
   };
d47 1
a47 1
   };
d63 3
a65 3
         };
      };
   };
d69 1
a69 1
   };
@


1.4
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.3 2012-02-14 20:43:22-08 - - $ */
d4 2
a7 1
#include <errno.h>
d59 1
a59 2
      int argi;
      for (argi = 1; argi < argc; ++argi) {
@


1.3
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.2 2012-02-14 20:33:11-08 - - $ */
d52 1
a52 1
   execname = argv[0];
@


1.2
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.1 2012-02-14 20:32:33-08 - - $ */
a8 1
#include "bool.h"
@


1.1
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.4 2012-02-14 20:32:06-08 - - $ */
d51 1
@
